// Styling markdown output

// Code formatting
pre {
  border-left: $spacer-1 solid $color-border;
  margin: $spacer-3 0;
  padding-left: 16px;
  width: (9 / 12 * 100%); // matches col-9
  overflow-x: auto;
}

code {
  color: $color-code;
  font-size: $body-font-size;
  padding: 1px 0px;
}


.prose {

  a {
    text-decoration: underline dotted;

    &:hover {
      text-decoration: underline;
    }
  }

  p,
  ol,
  ul {
    font-size: $prose-font-size;
    margin-bottom: 1em;
    width: 100%;

    @media (min-width: $breakpoint-lg) {
      width: (10 / 12 * 100%); // matches col-10
    }

  }

  ul,
  ol {
    padding-left: 40px;
  }

  li {
    margin-bottom: 0.5em;

    ul li,
    ol li {
      margin-bottom: 0;
    }
  }

  img {

    max-width: 100%;

    @media (min-width: $breakpoint-lg) {
      max-width: (12 / 10 * 100%); // make image fill width of container on desktop
    }

  }

  blockquote {
    line-height: 1.375;
    padding-left: 20px;
    margin: 40px 0 40px -16px;
    border-left: $spacer-1 solid $color-border;
    font-style: italic;

    p {
      font-size: 24px;
    }

    @media (min-width: $breakpoint-lg) {
      padding-left: $spacer-3;
      margin: $spacer-4 0 $spacer-4 -40px;
      max-width: (11 / 10 * 100%);

      p {
        font-size: 32px;
      }

    }

  }

  hr {
    color: $color-body-text;
    border-style: solid;
    border-width: thin;
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  dt {
    font-weight: bold;
    font-style: italic;
    line-height: 1.25;
  }

  dd {
    font-style: italic;
    margin-bottom: 0.5em;
  }

  // Markdown tables
  table {
    border-collapse: collapse;
    display: block;
    width: 100%;
    margin-bottom: 1.5em;
    overflow: auto;
    // For Firefox to horizontally scroll wider tables.
    word-break: normal;
    word-break: keep-all;

    th {
      font-weight: bold;
      text-align: left;
    }

    th,
    td {
      padding: $spacer-2 $spacer-3 $spacer-2 2px;
      border-top: 1px solid $color-body-text;
      border-bottom: 1px solid $color-body-text;
    }

    tr {
      background-color: #fff;
      border-top: 1px solid $color-body-text;
    }

    tr th {
      border-top: 2px solid $color-body-text;
      border-bottom: 2px solid $color-body-text;
    }
  }

}

pre.highlight,
.highlight pre {
  background-color: #272822;
}

.highlight .hll {
  background-color: #22282A
}

.highlight .c {
  color: #99AA8A
}

/* Comment */
.highlight .err {
  color: #960050;
  background-color: #1e0010
}

/* Error */
.highlight .k {
  color: #93C763
}

/* Keyword */
.highlight .l {
  color: #ae81ff
}

/* Literal */
.highlight .n {
  color: #F1F2F3
}

/* Name */
.highlight .o {
  color: #E8E2B7
}

/* Operator */
.highlight .p {
  color: #F1F2F3
}

/* Punctuation */
.highlight .ch {
  color: #99AA8A
}

/* Comment.Hashbang */
.highlight .cm {
  color: #99AA8A
}

/* Comment.Multiline */
.highlight .cp {
  color: #99AA8A
}

/* Comment.Preproc */
.highlight .cpf {
  color: #99AA8A
}

/* Comment.PreprocFile */
.highlight .c1 {
  color: #99AA8A
}

/* Comment.Single */
.highlight .cs {
  color: #99AA8A
}

/* Comment.Special */
.highlight .gd {
  color: #E8E2B7
}

/* Generic.Deleted */
.highlight .ge {
  font-style: italic
}

/* Generic.Emph */
.highlight .gi {
  color: #678CB1
}

/* Generic.Inserted */
.highlight .gs {
  font-weight: bold
}

/* Generic.Strong */
.highlight .gu {
  color: #99AA8A
}

/* Generic.Subheading */
.highlight .kc {
  color: #93C763
}

/* Keyword.Constant */
.highlight .kd {
  color: #93C763
}

/* Keyword.Declaration */
.highlight .kn {
  color: #E8E2B7
}

/* Keyword.Namespace */
.highlight .kp {
  color: #93C763
}

/* Keyword.Pseudo */
.highlight .kr {
  color: #93C763
}

/* Keyword.Reserved */
.highlight .kt {
  color: #83D8E1
}

/* Keyword.Type */
.highlight .ld {
  color: #EC7600
}

/* Literal.Date */
.highlight .m {
  color: #FFCD22
}

/* Literal.Number */
.highlight .s {
  color: #EC7600
}

/* Literal.String */
.highlight .na {
  color: #678CB1
}

/* Name.Attribute */
.highlight .nb {
  color: #F1F2F3
}

/* Name.Builtin */
.highlight .nc {
  color: #678CB1
}

/* Name.Class */
.highlight .no {
  color: #93C763
}

/* Name.Constant */
.highlight .nd {
  color: #678CB1
}

/* Name.Decorator */
.highlight .ni {
  color: #F1F2F3
}

/* Name.Entity */
.highlight .ne {
  color: #678CB1
}

/* Name.Exception */
.highlight .nf {
  color: #678CB1
}

/* Name.Function */
.highlight .nl {
  color: #F1F2F3
}

/* Name.Label */
.highlight .nn {
  color: #F1F2F3
}

/* Name.Namespace */
.highlight .nx {
  color: #678CB1
}

/* Name.Other */
.highlight .py {
  color: #F1F2F3
}

/* Name.Property */
.highlight .nt {
  color: #E8E2B7
}

/* Name.Tag */
.highlight .nv {
  color: #F1F2F3
}

/* Name.Variable */
.highlight .ow {
  color: #E8E2B7
}

/* Operator.Word */
.highlight .w {
  color: #F1F2F3
}

/* Text.Whitespace */
.highlight .mb {
  color: #FFCD22
}

/* Literal.Number.Bin */
.highlight .mf {
  color: #FFCD22
}

/* Literal.Number.Float */
.highlight .mh {
  color: #FFCD22
}

/* Literal.Number.Hex */
.highlight .mi {
  color: #FFCD22
}

/* Literal.Number.Integer */
.highlight .mo {
  color: #FFCD22
}

/* Literal.Number.Oct */
.highlight .sb {
  color: #EC7600
}

/* Literal.String.Backtick */
.highlight .sc {
  color: #EC7600
}

/* Literal.String.Char */
.highlight .sd {
  color: #EC7600
}

/* Literal.String.Doc */
.highlight .s2 {
  color: #EC7600
}

/* Literal.String.Double */
.highlight .se {
  color: #ae81ff
}

/* Literal.String.Escape */
.highlight .sh {
  color: #EC7600
}

/* Literal.String.Heredoc */
.highlight .si {
  color: #EC7600
}

/* Literal.String.Interpol */
.highlight .sx {
  color: #EC7600
}

/* Literal.String.Other */
.highlight .sr {
  color: #EC7600
}

/* Literal.String.Regex */
.highlight .s1 {
  color: #EC7600
}

/* Literal.String.Single */
.highlight .ss {
  color: #EC7600
}

/* Literal.String.Symbol */
.highlight .bp {
  color: #F1F2F3
}

/* Name.Builtin.Pseudo */
.highlight .vc {
  color: #F1F2F3
}

/* Name.Variable.Class */
.highlight .vg {
  color: #F1F2F3
}

/* Name.Variable.Global */
.highlight .vi {
  color: #F1F2F3
}

/* Name.Variable.Instance */
.highlight .il {
  color: #FFCD22
}

/* Literal.Number.Integer.Long */